### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.data.collections._reliable_hash_map
  id: _reliable_hash_map
  parent: microsoft.servicefabric.data.collections
  children:
  - microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync()
  - microsoft.servicefabric.data.collections._reliable_hash_map.close()
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  - microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K)
  - microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode)
  - microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync(Transaction)
  - microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K)
  - microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.getCount()
  - microsoft.servicefabric.data.collections._reliable_hash_map.getName()
  - microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync(Transaction)
  - microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync(Transaction)
  - microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V)
  - microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V)
  - microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap(long)
  - microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K)
  - microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V)
  - microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V,Duration,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_hash_map.size()
  - microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers(boolean)
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: ReliableHashMap<K,V>
  nameWithType: ReliableHashMap<K,V>
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K,V>
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 21
  package: microsoft.servicefabric.data.collections
  syntax:
    content: public class ReliableHashMap<K extends String,V> implements ReliableCollection
    typeParameters:
    - type: a1c6f3a5
    - type: 0a560652
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.data.collections.ReliableCollectionsNativeAPIs
  inheritedMembers:
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.freeTStore(long)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeContainsKeyAsync(long,long,String,LockMode,long,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeEnumeratorAsync(long,long,int)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync(long,long,String,long,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync2(long,long,String,long,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetCount(long)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeKeyEnumeratorAsync(long,long,int)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeRemoveAsync(long,long,String,long,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
  - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync()
  id: clearAsync()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: clearAsync()
  nameWithType: ReliableHashMap<K,V>.clearAsync()
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.clearAsync()
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 652
  package: microsoft.servicefabric.data.collections
  summary: <p>Removes all state from the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref>, including replicated and persisted store. </p>
  syntax:
    content: public CompletableFuture<Void> clearAsync()
    return:
      type: db03ee24
      description: <p>A completable future that represents the asynchronous clear operation. </p>
  overridden: microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.close()
  id: close()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: close()
  nameWithType: ReliableHashMap<K,V>.close()
  fullName: void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.close()
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 665
  package: microsoft.servicefabric.data.collections
  syntax:
    content: public void close()
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  id: computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  nameWithType: ReliableHashMap<K,V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 238
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping).</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: remappingFunction
      type: 534e89dc
      description: <p>the function to compute a value </p>
    return:
      type: d9602408
      description: <p>Returns the new value associated with the specified key, or null if none. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  id: computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 261
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping).</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated. </p>
    - id: remappingFunction
      type: 534e89dc
      description: <p>the function to compute a value. </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d9602408
      description: <p>Returns the new value associated with the specified key, or null if none. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)
  id: computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)
  nameWithType: ReliableHashMap<K,V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 327
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless null.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: mappingFunction
      type: 31e11ead
      description: <p>the function to compute a value </p>
    return:
      type: d9602408
      description: <p>the current (existing or computed) value associated with the specified key, or null if the computed value is null </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)
  id: computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 351
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless null.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: mappingFunction
      type: 31e11ead
      description: <p>the function to compute a value </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d9602408
      description: <p>the current (existing or computed) value associated with the specified key, or null if the computed value is null. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  id: computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  nameWithType: ReliableHashMap<K,V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 400
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which a value may be associated. </p>
    - id: remappingFunction
      type: 534e89dc
      description: <p>the function to compute a value. </p>
    return:
      type: d9602408
      description: <p>the new value associated with the specified key, or null if none. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  id: computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 422
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<V> computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which a value may be associated. </p>
    - id: remappingFunction
      type: 534e89dc
      description: <p>the function to compute a value. </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d9602408
      description: <p>the new value associated with the specified key, or null if none. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K)
  id: containsKeyAsync(Transaction,K)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: containsKeyAsync(Transaction txn, K key)
  nameWithType: ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 555
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Tests if the specified object is a key in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>possible key </p>
    return:
      type: 7e53ac82
      description: <p>true if and only if the specified object is a key in this table; false otherwise </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,Duration,CancellationToken)
  id: containsKeyAsync(Transaction,K,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 589
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Tests if the specified object is a key in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>possible key </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>true if and only if the specified object is a key in this table; false otherwise. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode)
  id: containsKeyAsync(Transaction,K,LockMode)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: containsKeyAsync(Transaction txn, K key, LockMode lockMode)
  nameWithType: ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 570
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Tests if the specified object is a key in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, LockMode lockMode)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>possible key </p>
    - id: lockMode
      type: microsoft.servicefabric.data.collections._lock_mode
    return:
      type: 7e53ac82
      description: <p>true if and only if the specified object is a key in this table; false otherwise. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)
  id: containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 610
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Tests if the specified object is a key in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>possible key </p>
    - id: lockMode
      type: microsoft.servicefabric.data.collections._lock_mode
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>true if and only if the specified object is a key in this table; false otherwise. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync(Transaction)
  id: elementsAsync(Transaction)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: elementsAsync(Transaction txn)
  nameWithType: ReliableHashMap<K,V>.elementsAsync(Transaction txn)
  fullName: CompletableFuture<AsyncEnumeration<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.elementsAsync(Transaction txn)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 210
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns an enumeration of the values in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<AsyncEnumeration<V>> elementsAsync(Transaction txn)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeratione521727f
      description: <p>an enumeration of the values in this table </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K)
  id: getAsync(Transaction,K)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: getAsync(Transaction txn, K key)
  nameWithType: ReliableHashMap<K,V>.getAsync(Transaction txn, K key)
  fullName: CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync(Transaction txn, K key)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 116
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ConditionalValue<V>> getAsync(Transaction txn, K key)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>the key whose associated value is to be returned </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
      description: <p>the value to which the specified key is mapped, or null if this map contains no mapping for the key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K,Duration,CancellationToken)
  id: getAsync(Transaction,K,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 136
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ConditionalValue<V>> getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>the key whose associated value is to be returned </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
      description: <p>the value to which the specified key is mapped, or null if this map contains no mapping for the key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getCount()
  id: getCount()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: getCount()
  nameWithType: ReliableHashMap<K,V>.getCount()
  fullName: long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getCount()
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.getCount*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 658
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Gets the number of elements contained in the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref></p>

    <p></p>
  syntax:
    content: public long getCount()
    return:
      type: 0364520f
      description: <p>The number of elements. </p>
  overridden: microsoft.servicefabric.data.collections._reliable_collection.getCount()
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getName()
  id: getName()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: getName()
  nameWithType: ReliableHashMap<K,V>.getName()
  fullName: URI microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getName()
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.getName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 55
  package: microsoft.servicefabric.data.collections
  summary: <p>Gets the unique URI name for the Reliable HashMap </p>
  syntax:
    content: public URI getName()
    return:
      type: "62304784"
  overridden: microsoft.servicefabric.data._reliable_state.getName()
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync(Transaction)
  id: keysAsync(Transaction)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: keysAsync(Transaction txn)
  nameWithType: ReliableHashMap<K,V>.keysAsync(Transaction txn)
  fullName: CompletableFuture<AsyncEnumeration<K>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keysAsync(Transaction txn)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 199
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns an enumeration of the keys in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<AsyncEnumeration<K>> keysAsync(Transaction txn)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration21d24612
      description: <p>an enumeration of the keys in this table </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync(Transaction)
  id: keyValuesAsync(Transaction)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: keyValuesAsync(Transaction txn)
  nameWithType: ReliableHashMap<K,V>.keyValuesAsync(Transaction txn)
  fullName: CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keyValuesAsync(Transaction txn)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 221
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns an enumeration of the key-value pairs in this table.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> keyValuesAsync(Transaction txn)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration78504a52microsoft.servicefabric.data.utilities._key_value_pair7b670ebd
      description: <p>an enumeration of the key-value pairs in this table. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V)
  id: putAsync(Transaction,K,V)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: putAsync(Transaction txn, K key, V value)
  nameWithType: ReliableHashMap<K,V>.putAsync(Transaction txn, K key, V value)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync(Transaction txn, K key, V value)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 72
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Maps the specified key to the specified value in this table. Neither the key nor the value can be null.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> putAsync(Transaction txn, K key, V value)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    return:
      type: 16409f84
      description: <p>the previous value associated with key, or null if there was no mapping for key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V,Duration,CancellationToken)
  id: putAsync(Transaction,K,V,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 94
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Maps the specified key to the specified value in this table. Neither the key nor the value can be null.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>the previous value associated with key, or null if there was no mapping for key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V)
  id: putIfAbsentAsync(Transaction,K,V)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: putIfAbsentAsync(Transaction txn, K key, V value)
  nameWithType: ReliableHashMap<K,V>.putIfAbsentAsync(Transaction txn, K key, V value)
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync(Transaction txn, K key, V value)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 511
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the specified key is not already associated with a value, associate it with the given value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> putIfAbsentAsync(Transaction txn, K key, V value)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    return:
      type: db03ee24
      description: <p>Returns nothing. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)
  id: putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 533
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>If the specified key is not already associated with a value, associate it with the given value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is to be associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: db03ee24
      description: <p>Returns nothing. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap(long)
  id: ReliableHashMap(long)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: ReliableHashMap(long store)
  nameWithType: ReliableHashMap<K,V>.ReliableHashMap(long store)
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.ReliableHashMap(long store)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 29
  package: microsoft.servicefabric.data.collections
  syntax:
    content: public ReliableHashMap(long store)
    parameters:
    - id: store
      type: 0364520f
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K)
  id: removeAsync(Transaction,K)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: removeAsync(Transaction txn, K key)
  nameWithType: ReliableHashMap<K,V>.removeAsync(Transaction txn, K key)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync(Transaction txn, K key)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 472
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Removes the key (and its corresponding value) from this map. This method does nothing if the key is not in the map.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> removeAsync(Transaction txn, K key)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>the key that needs to be removed. </p>
    return:
      type: 7e53ac82
      description: <p>Returns a boolean value indicating whether remove operation succeeded or not. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K,Duration,CancellationToken)
  id: removeAsync(Transaction,K,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 492
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Removes the key (and its corresponding value) from this map. This method does nothing if the key is not in the map.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>the key that needs to be removed. </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>Returns a boolean value indicating whether remove operation succeeded or not. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V)
  id: replaceAsync(Transaction,K,V)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: replaceAsync(Transaction txn, K key, V value)
  nameWithType: ReliableHashMap<K,V>.replaceAsync(Transaction txn, K key, V value)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync(Transaction txn, K key, V value)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 159
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Replaces the entry for a key only if currently mapped to some value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> replaceAsync(Transaction txn, K key, V value)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    return:
      type: 16409f84
      description: <p>the previous value associated with the specified key, or null if there was no mapping for the key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V,Duration,CancellationToken)
  id: replaceAsync(Transaction,K,V,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableHashMap<K,V>.replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 180
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Replaces the entry for a key only if currently mapped to some value.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: txn
      type: microsoft.servicefabric.data._transaction
      description: <p>The transaction id associated with this operation. </p>
    - id: key
      type: a1c6f3a5
      description: <p>key with which the specified value is associated </p>
    - id: value
      type: 0a560652
      description: <p>value to be associated with the specified key </p>
    - id: timeout
      type: e02a2de0
      description: <p>the timeout in seconds to complete the operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>the previous value associated with the specified key, or null if there was no mapping for the key </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.size()
  id: size()
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: size()
  nameWithType: ReliableHashMap<K,V>.size()
  fullName: long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.size()
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.size*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 646
  package: microsoft.servicefabric.data.collections
  summary: >-
    <p>Returns the number of mappings.</p>

    <p></p>
  syntax:
    content: public long size()
    return:
      type: 0364520f
      description: <p>This method returns the number of mappings in the map. This is not a asynchronous call. It gives BEST EFFORT number of mappings. </p>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers(boolean)
  id: useByteBuffers(boolean)
  parent: microsoft.servicefabric.data.collections._reliable_hash_map
  href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
  langs:
  - java
  name: useByteBuffers(boolean flag)
  nameWithType: ReliableHashMap<K,V>.useByteBuffers(boolean flag)
  fullName: void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.useByteBuffers(boolean flag)
  overload: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
    startLine: 48
  package: microsoft.servicefabric.data.collections
  summary: <p>Use byte buffers for serializing and de-serializing </p>
  syntax:
    content: public void useByteBuffers(boolean flag)
    parameters:
    - id: flag
      type: 4fc6e284
      description: <p>Whether to use byte buffers or not </p>
references:
- uid: a1c6f3a5
  spec.java:
  - name: K
    fullName: K
- uid: 0a560652
  spec.java:
  - name: V
    fullName: V
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap*
  name: ReliableHashMap
  nameWithType: ReliableHashMap<K,V>.ReliableHashMap
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.ReliableHashMap
  package: microsoft.servicefabric.data.collections
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers*
  name: useByteBuffers
  nameWithType: ReliableHashMap<K,V>.useByteBuffers
  fullName: void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.useByteBuffers
  package: microsoft.servicefabric.data.collections
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getName*
  name: getName
  nameWithType: ReliableHashMap<K,V>.getName
  fullName: URI microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getName
  package: microsoft.servicefabric.data.collections
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
  name: putAsync
  nameWithType: ReliableHashMap<K,V>.putAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync
  package: microsoft.servicefabric.data.collections
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.data._conditional_value
    name: ConditionalValue
    fullName: microsoft.servicefabric.data.ConditionalValue
    href: microsoft.servicefabric.data._conditional_value.yml
  - name: <V>>
    fullName: <V>>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
  name: getAsync
  nameWithType: ReliableHashMap<K,V>.getAsync
  fullName: CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
  name: replaceAsync
  nameWithType: ReliableHashMap<K,V>.replaceAsync
  fullName: CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync
  package: microsoft.servicefabric.data.collections
- uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration21d24612
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.data.utilities._async_enumeration
    name: AsyncEnumeration
    fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
    href: microsoft.servicefabric.data.utilities._async_enumeration.yml
  - name: <K>>
    fullName: <K>>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync*
  name: keysAsync
  nameWithType: ReliableHashMap<K,V>.keysAsync
  fullName: CompletableFuture<AsyncEnumeration<K>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keysAsync
  package: microsoft.servicefabric.data.collections
- uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeratione521727f
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.data.utilities._async_enumeration
    name: AsyncEnumeration
    fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
    href: microsoft.servicefabric.data.utilities._async_enumeration.yml
  - name: <V>>
    fullName: <V>>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync*
  name: elementsAsync
  nameWithType: ReliableHashMap<K,V>.elementsAsync
  fullName: CompletableFuture<AsyncEnumeration<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.elementsAsync
  package: microsoft.servicefabric.data.collections
- uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration78504a52microsoft.servicefabric.data.utilities._key_value_pair7b670ebd
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.data.utilities._async_enumeration
    name: AsyncEnumeration
    fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
    href: microsoft.servicefabric.data.utilities._async_enumeration.yml
  - name: <
    fullName: <
  - uid: microsoft.servicefabric.data.utilities._key_value_pair
    name: KeyValuePair
    fullName: microsoft.servicefabric.data.utilities.KeyValuePair
    href: microsoft.servicefabric.data.utilities._key_value_pair.yml
  - name: <K, V>>>
    fullName: <K, V>>>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync*
  name: keyValuesAsync
  nameWithType: ReliableHashMap<K,V>.keyValuesAsync
  fullName: CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keyValuesAsync
  package: microsoft.servicefabric.data.collections
- uid: 534e89dc
  spec.java:
  - name: BiFunction<? super K, ? super V, ? extends V>
    fullName: BiFunction<? super K, ? super V, ? extends V>
- uid: d9602408
  spec.java:
  - name: CompletableFuture<V>
    fullName: CompletableFuture<V>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
  name: computeAsync
  nameWithType: ReliableHashMap<K,V>.computeAsync
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync
  package: microsoft.servicefabric.data.collections
- uid: 31e11ead
  spec.java:
  - name: Function<? super K, ? extends V>
    fullName: Function<? super K, ? extends V>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
  name: computeIfAbsent
  nameWithType: ReliableHashMap<K,V>.computeIfAbsent
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
  name: computeIfPresent
  nameWithType: ReliableHashMap<K,V>.computeIfPresent
  fullName: CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent
  package: microsoft.servicefabric.data.collections
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
  name: removeAsync
  nameWithType: ReliableHashMap<K,V>.removeAsync
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync
  package: microsoft.servicefabric.data.collections
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
  name: putIfAbsentAsync
  nameWithType: ReliableHashMap<K,V>.putIfAbsentAsync
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
  name: containsKeyAsync
  nameWithType: ReliableHashMap<K,V>.containsKeyAsync
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.size*
  name: size
  nameWithType: ReliableHashMap<K,V>.size
  fullName: long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.size
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync*
  name: clearAsync
  nameWithType: ReliableHashMap<K,V>.clearAsync
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.clearAsync
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.getCount*
  name: getCount
  nameWithType: ReliableHashMap<K,V>.getCount
  fullName: long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getCount
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_hash_map.close*
  name: close
  nameWithType: ReliableHashMap<K,V>.close
  fullName: void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.close
  package: microsoft.servicefabric.data.collections
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.freeTStore(long)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeContainsKeyAsync(long,long,String,LockMode,long,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeEnumeratorAsync(long,long,int)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync(long,long,String,long,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync2(long,long,String,long,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetCount(long)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeKeyEnumeratorAsync(long,long,int)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeRemoveAsync(long,long,String,long,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,byte [],int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)
- uid: microsoft.servicefabric.data.collections._reliable_collection
  parent: microsoft.servicefabric.data.collections
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  name: ReliableCollection
  nameWithType: ReliableCollection
  fullName: microsoft.servicefabric.data.collections.ReliableCollection
  type: Interface
  summary: <p>Defines methods for manipulating Reliable Collections. </p>
  syntax:
    content: public interface ReliableCollection extends ReliableState
- uid: microsoft.servicefabric.data._reliable_state.getName()
  parent: microsoft.servicefabric.data._reliable_state
  href: microsoft.servicefabric.data._reliable_state.yml
  name: getName()
  nameWithType: ReliableState.getName()
  fullName: URI microsoft.servicefabric.data.ReliableState.getName()
  type: Method
  summary: >-
    <p>Gets a value indicating the unique name for <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref></p>

    <p></p>
  syntax:
    content: public URI getName()
    return:
      type: "62304784"
      description: <p>The name of the <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref> instance. </p>
- uid: microsoft.servicefabric.data._transaction
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._transaction.yml
  name: Transaction
  nameWithType: Transaction
  fullName: microsoft.servicefabric.data.Transaction
  type: Interface
  syntax:
    content: public interface Transaction
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: microsoft.servicefabric.data._conditional_value
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._conditional_value.yml
  name: ConditionalValue<TValue>
  nameWithType: ConditionalValue<TValue>
  fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
  type: Class
  summary: >-
    <p>Result class returned by DistributedCollections APIs that may or may not return a value.</p>

    <p></p>
  syntax:
    content: public class ConditionalValue<TValue>
    typeParameters:
    - type: 649a7377
      description: <p>Value to initialize the result with. </p>
- uid: microsoft.servicefabric.data.utilities._async_enumeration
  parent: microsoft.servicefabric.data.utilities
  href: microsoft.servicefabric.data.utilities._async_enumeration.yml
  name: AsyncEnumeration<E>
  nameWithType: AsyncEnumeration<E>
  fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>
  type: Interface
  summary: >-
    <p>Asynchronous enumerator</p>

    <p></p>
  syntax:
    content: public interface AsyncEnumeration<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>The type of element to enumerate. </p>
- uid: microsoft.servicefabric.data.utilities._key_value_pair
  parent: microsoft.servicefabric.data.utilities
  href: microsoft.servicefabric.data.utilities._key_value_pair.yml
  name: KeyValuePair<K,V>
  nameWithType: KeyValuePair<K,V>
  fullName: microsoft.servicefabric.data.utilities.KeyValuePair<K,V>
  type: Class
  summary: >-
    <p>A pair maintaining a key and a value.</p>

    <p></p>
  syntax:
    content: public class KeyValuePair<K extends String,V>
    typeParameters:
    - type: a1c6f3a5
      description: <p>Specifies the type of the key </p>
    - type: 0a560652
      description: <p>Specifies the type of the value </p>
- uid: microsoft.servicefabric.data.collections._lock_mode
  parent: microsoft.servicefabric.data.collections
  href: microsoft.servicefabric.data.collections._lock_mode.yml
  name: LockMode
  nameWithType: LockMode
  fullName: microsoft.servicefabric.data.collections.LockMode
  type: Enum
  summary: <p>Specifies how reliable collections will lock resources, which determines how the resources can be accessed by concurrent transactions. </p>
  syntax:
    content: public enum LockMode
- uid: microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
  parent: microsoft.servicefabric.data.collections._reliable_collection
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  name: clearAsync()
  nameWithType: ReliableCollection.clearAsync()
  fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableCollection.clearAsync()
  type: Method
  summary: <p>Removes all state from the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref>, including replicated and persisted store. </p>
  syntax:
    content: public CompletableFuture<Void> clearAsync()
    return:
      type: db03ee24
      description: <p>A completable future that represents the asynchronous clear operation. </p>
- uid: microsoft.servicefabric.data.collections._reliable_collection.getCount()
  parent: microsoft.servicefabric.data.collections._reliable_collection
  href: microsoft.servicefabric.data.collections._reliable_collection.yml
  name: getCount()
  nameWithType: ReliableCollection.getCount()
  fullName: long microsoft.servicefabric.data.collections.ReliableCollection.getCount()
  type: Method
  summary: >-
    <p>Gets the number of elements contained in the <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref></p>

    <p></p>
  syntax:
    content: public long getCount()
    return:
      type: 0364520f
      description: <p>The number of elements. </p>
