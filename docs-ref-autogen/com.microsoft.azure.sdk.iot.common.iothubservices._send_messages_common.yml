### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common
  id: _send_messages_common
  parent: com.microsoft.azure.sdk.iot.common.iothubservices
  children:
  - com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.SendMessage(DeviceClient,final int,final Integer,final Integer)
  href: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.yml
  langs:
  - java
  name: SendMessagesCommon
  nameWithType: SendMessagesCommon
  fullName: com.microsoft.azure.sdk.iot.common.iothubservices.SendMessagesCommon
  type: Class
  source:
    remote: &o0
      path: iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/iothubservices/SendMessagesCommon.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/iothubservices/SendMessagesCommon.java
    startLine: 20
  package: com.microsoft.azure.sdk.iot.common.iothubservices
  syntax:
    content: public class SendMessagesCommon
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.SendMessage(DeviceClient,final int,final Integer,final Integer)
  id: SendMessage(DeviceClient,final int,final Integer,final Integer)
  parent: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common
  href: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.yml
  langs:
  - java
  name: SendMessage(DeviceClient client, final int NUM_MESSAGES_PER_CONNECTION, final Integer RETRY_MILLISECONDS, final Integer SEND_TIMEOUT_MILLISECONDS)
  nameWithType: SendMessagesCommon.SendMessage(DeviceClient client, final int NUM_MESSAGES_PER_CONNECTION, final Integer RETRY_MILLISECONDS, final Integer SEND_TIMEOUT_MILLISECONDS)
  fullName: static void com.microsoft.azure.sdk.iot.common.iothubservices.SendMessagesCommon.SendMessage(DeviceClient client, final int NUM_MESSAGES_PER_CONNECTION, final Integer RETRY_MILLISECONDS, final Integer SEND_TIMEOUT_MILLISECONDS)
  overload: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.SendMessage*
  type: Method
  source:
    remote: *o0
    path: iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/iothubservices/SendMessagesCommon.java
    startLine: 26
  package: com.microsoft.azure.sdk.iot.common.iothubservices
  syntax:
    content: public static void SendMessage(DeviceClient client, final int NUM_MESSAGES_PER_CONNECTION, final Integer RETRY_MILLISECONDS, final Integer SEND_TIMEOUT_MILLISECONDS)
    parameters:
    - id: client
      type: com.microsoft.azure.sdk.iot.device._device_client
    - id: NUM_MESSAGES_PER_CONNECTION
      type: cd225469
    - id: RETRY_MILLISECONDS
      type: 3437983f
    - id: SEND_TIMEOUT_MILLISECONDS
      type: 3437983f
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: com.microsoft.azure.sdk.iot.common.iothubservices._send_messages_common.SendMessage*
  name: SendMessage
  nameWithType: SendMessagesCommon.SendMessage
  fullName: static void com.microsoft.azure.sdk.iot.common.iothubservices.SendMessagesCommon.SendMessage
  package: com.microsoft.azure.sdk.iot.common.iothubservices
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
