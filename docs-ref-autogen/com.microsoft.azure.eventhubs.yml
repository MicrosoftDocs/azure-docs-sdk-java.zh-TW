### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs
  id: eventhubs
  children:
  - com.microsoft.azure.eventhubs._active_client_token_manager
  - com.microsoft.azure.eventhubs._authorization_failed_exception
  - com.microsoft.azure.eventhubs._batch_options
  - com.microsoft.azure.eventhubs._c_b_s_channel
  - com.microsoft.azure.eventhubs._client_constants
  - com.microsoft.azure.eventhubs._client_entity
  - com.microsoft.azure.eventhubs._communication_exception
  - com.microsoft.azure.eventhubs._connection_string_builder
  - com.microsoft.azure.eventhubs._error_context
  - com.microsoft.azure.eventhubs._event_data
  - com.microsoft.azure.eventhubs._event_data._system_properties
  - com.microsoft.azure.eventhubs._event_data_batch
  - com.microsoft.azure.eventhubs._event_hub_client
  - com.microsoft.azure.eventhubs._event_hub_exception
  - com.microsoft.azure.eventhubs._event_hub_partition_runtime_information
  - com.microsoft.azure.eventhubs._event_hub_runtime_information
  - com.microsoft.azure.eventhubs._exception_util
  - com.microsoft.azure.eventhubs._fault_tolerant_object
  - com.microsoft.azure.eventhubs._i_event_hub_client
  - com.microsoft.azure.eventhubs._i_receiver_settings_provider
  - com.microsoft.azure.eventhubs._i_timeout_error_handler
  - com.microsoft.azure.eventhubs._illegal_connection_string_format_exception
  - com.microsoft.azure.eventhubs._illegal_entity_exception
  - com.microsoft.azure.eventhubs._iterator_util
  - com.microsoft.azure.eventhubs._management_channel
  - com.microsoft.azure.eventhubs._message_receiver
  - com.microsoft.azure.eventhubs._message_sender
  - com.microsoft.azure.eventhubs._messaging_factory
  - com.microsoft.azure.eventhubs._messaging_factory._reactor_factory
  - com.microsoft.azure.eventhubs._messaging_factory._thread_factory
  - com.microsoft.azure.eventhubs._operation_cancelled_exception
  - com.microsoft.azure.eventhubs._partition_receive_handler
  - com.microsoft.azure.eventhubs._partition_receiver
  - com.microsoft.azure.eventhubs._partition_sender
  - com.microsoft.azure.eventhubs._pass_by_ref
  - com.microsoft.azure.eventhubs._payload_size_exceeded_exception
  - com.microsoft.azure.eventhubs._quota_exceeded_exception
  - com.microsoft.azure.eventhubs._receive_pump
  - com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver
  - com.microsoft.azure.eventhubs._receiver_context
  - com.microsoft.azure.eventhubs._receiver_disconnected_exception
  - com.microsoft.azure.eventhubs._receiver_options
  - com.microsoft.azure.eventhubs._receiver_runtime_information
  - com.microsoft.azure.eventhubs._replayable_work_item
  - com.microsoft.azure.eventhubs._retry_exponential
  - com.microsoft.azure.eventhubs._retry_policy
  - com.microsoft.azure.eventhubs._sender_context
  - com.microsoft.azure.eventhubs._server_busy_exception
  - com.microsoft.azure.eventhubs._shared_access_signature_token_provider
  - com.microsoft.azure.eventhubs._string_util
  - com.microsoft.azure.eventhubs._timeout_exception
  - com.microsoft.azure.eventhubs._timeout_tracker
  - com.microsoft.azure.eventhubs._timer
  - com.microsoft.azure.eventhubs._timer_type
  - com.microsoft.azure.eventhubs._tracking_util
  - com.microsoft.azure.eventhubs._work_item
  href: com.microsoft.azure.eventhubs.yml
  langs:
  - java
  name: com.microsoft.azure.eventhubs
  nameWithType: com.microsoft.azure.eventhubs
  fullName: com.microsoft.azure.eventhubs
  type: Namespace
  source:
    remote:
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ActiveClientTokenManager.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ActiveClientTokenManager.java
    startLine: 4
  syntax:
    content: package com.microsoft.azure.eventhubs
references:
- uid: com.microsoft.azure.eventhubs.amqp
  href: com.microsoft.azure.eventhubs.amqp.yml
  name: com.microsoft.azure.eventhubs.amqp
  nameWithType: com.microsoft.azure.eventhubs.amqp
  fullName: com.microsoft.azure.eventhubs.amqp
  type: Namespace
  syntax:
    content: package com.microsoft.azure.eventhubs.amqp
- uid: com.microsoft.azure.eventhubs._active_client_token_manager
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._active_client_token_manager.yml
  name: ActiveClientTokenManager
  nameWithType: ActiveClientTokenManager
  fullName: com.microsoft.azure.eventhubs.ActiveClientTokenManager
  type: Class
  syntax:
    content: public class ActiveClientTokenManager
- uid: com.microsoft.azure.eventhubs._authorization_failed_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._authorization_failed_exception.yml
  name: AuthorizationFailedException
  nameWithType: AuthorizationFailedException
  fullName: com.microsoft.azure.eventhubs.AuthorizationFailedException
  type: Class
  summary: >-
    <p>Authorization failed exception is thrown when error is encountered during authorizing user's permission to run the intended operations. When encountered this exception user should check whether the token/key provided in the connection string (e.g. one passed to <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false">com.microsoft.azure.eventhubs.EventHubClient#createFromConnectionString(String)</xref>) is valid, and has correct execution right for the intended operations (e.g. Receive call will need Listen claim associated with the key/token).</p>

    <p></p>
  syntax:
    content: public class AuthorizationFailedException extends EventHubException
- uid: com.microsoft.azure.eventhubs._batch_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._batch_options.yml
  name: BatchOptions
  nameWithType: BatchOptions
  fullName: com.microsoft.azure.eventhubs.BatchOptions
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> is used to create <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es.</p>\r\n<p>If you're creating <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es with <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, then you can set a partitionKey and maxMessageSize using the .with() method. Alternatively, if you'd like the default settings, simply construct <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> with the void constructor. Default settings:<itemizedlist><listitem><p>partitionKey is null</p></listitem><listitem><p>maxMessageSize is the maximum allowed size</p></listitem></itemizedlist></p>\r\n<p>If you're creating <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es with <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, then you can only set a maxMessageSize using the .with() method. Alternatively, if you'd like the default settings, simply construct <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> with the void constructor. Default settings:<itemizedlist><listitem><p>maxMessageSize is the maximum allowed size</p></listitem><listitem><p>Note: if you set a partition key, an <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> will be thrown.</p></listitem></itemizedlist></p>\r\n<p>To construct either type of batch, create a <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> object and pass it into the appropriate createBatch method. If using <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, then use (<xref uid=\"com.microsoft.azure.eventhubs._partition_sender.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">PartitionSender#createBatch(BatchOptions)</xref>. If using <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, then use <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">EventHubClient#createBatch(BatchOptions)</xref>.</p>\r\n<p>\r\n  <pre>\r\n    <code>// Note: For all examples, 'client' is an instance of EventHubClient. The usage is the same for PartitionSender,\r\n    however, you can NOT set a partition key when using PartitionSender\r\n    \r\n    // Create EventDataBatch with defaults\r\n    EventDataBatch edb1 = client.createBatch();\r\n    \r\n    // Create EventDataBatch with custom partitionKey\r\n    BatchOptions options = new BatchOptions().with( options -&gt; options.partitionKey = \"foo\");\r\n    EventDataBatch edb2 = client.createBatch(options);\r\n    \r\n    // Create EventDataBatch with custom partitionKey and maxMessageSize\r\n    BatchOptions options = new BatchOptions().with ( options -&gt; {\r\n        options.partitionKey = \"foo\";\r\n        options.maxMessageSize = 100 * 1024;\r\n    };\r\n    EventDataBatch edb3 = client.createBatch(options);\r\n    </code>\r\n  </pre>\r\n</p>"
  syntax:
    content: public class BatchOptions
- uid: com.microsoft.azure.eventhubs._c_b_s_channel
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._c_b_s_channel.yml
  name: CBSChannel
  nameWithType: CBSChannel
  fullName: com.microsoft.azure.eventhubs.CBSChannel
  type: Class
  syntax:
    content: public class CBSChannel
- uid: com.microsoft.azure.eventhubs._client_constants
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._client_constants.yml
  name: ClientConstants
  nameWithType: ClientConstants
  fullName: com.microsoft.azure.eventhubs.ClientConstants
  type: Class
  syntax:
    content: public class ClientConstants
- uid: com.microsoft.azure.eventhubs._client_entity
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._client_entity.yml
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: com.microsoft.azure.eventhubs.ClientEntity
  type: Class
  summary: '<p>Contract for all client entities with Open-Close/Abort state m/c main-purpose: closeAll related entities Internal-class </p>'
  syntax:
    content: public class ClientEntity
- uid: com.microsoft.azure.eventhubs._communication_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._communication_exception.yml
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: com.microsoft.azure.eventhubs.CommunicationException
  type: Class
  summary: >-
    <p>This exception is thrown when there is a client side connectivity issue. When receiving this exception user should check client connectivity settings to the service: <itemizedlist><listitem><p>Check for correct hostname and port number used in endpoint. </p></listitem><listitem><p>Check for any possible proxy settings that can block amqp ports </p></listitem><listitem><p>Check for any firewall settings that can block amqp ports </p></listitem><listitem><p>Check for any general network connectivity issues, as well as network latency. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class CommunicationException extends EventHubException
- uid: com.microsoft.azure.eventhubs._connection_string_builder
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._connection_string_builder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs._connection_string_builder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref> can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>\r\n<p>Sample Code: <pre><code>    ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(\r\n        \"ServiceBusNamespaceName\",\r\n        \"ServiceBusEntityName\", // eventHubName or QueueName or TopicName\r\n        \"SharedAccessSignatureKeyName\",\r\n        \"SharedAccessSignatureKey\");\r\n    \r\n    String connectionString = connectionStringBuilder.toString();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisted of key-value pair separated by \";\". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <itemizedlist><listitem><p>Endpoint - the URL that contains the servicebus namespace </p></listitem><listitem><p>EntityPath - the path to the service bus entity (queue/topic/eventhub/subscription/consumergroup/partition) </p></listitem><listitem><p>SharedAccessKeyName - the key name to the corresponding shared access policy rule for the namespace, or entity. </p></listitem><listitem><p>SharedAccessKey - the key for the corresponding shared access policy rule of the namespace or entity. </p></listitem></itemizedlist></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.eventhubs._error_context
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._error_context.yml
  name: ErrorContext
  nameWithType: ErrorContext
  fullName: com.microsoft.azure.eventhubs.ErrorContext
  type: Class
  syntax:
    content: public class ErrorContext
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Class
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>

    <p>Serializing a received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>

    i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section

    iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
  syntax:
    content: public class EventData
- uid: com.microsoft.azure.eventhubs._event_data_batch
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data_batch.yml
  name: EventDataBatch
  nameWithType: EventDataBatch
  fullName: com.microsoft.azure.eventhubs.EventDataBatch
  type: Class
  summary: <p>Helper class for creating a batch/collection of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> objects to be used while Sending to EventHubs </p>
  syntax:
    content: public class EventDataBatch
- uid: com.microsoft.azure.eventhubs._event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_client.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Class
  summary: >-
    <p>Anchor class - all EventHub client operations STARTS here.</p>

    <p></p>
  syntax:
    content: public class EventHubClient extends ClientEntity implements IEventHubClient
- uid: com.microsoft.azure.eventhubs._event_hub_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_exception.yml
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
  type: Class
  summary: <p>This is the base exception that service bus will produce for all error cases. </p>
  syntax:
    content: public class EventHubException
- uid: com.microsoft.azure.eventhubs._event_hub_partition_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_partition_runtime_information.yml
  name: EventHubPartitionRuntimeInformation
  nameWithType: EventHubPartitionRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.EventHubPartitionRuntimeInformation
  type: Class
  syntax:
    content: public class EventHubPartitionRuntimeInformation
- uid: com.microsoft.azure.eventhubs._event_hub_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_hub_runtime_information.yml
  name: EventHubRuntimeInformation
  nameWithType: EventHubRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.EventHubRuntimeInformation
  type: Class
  syntax:
    content: public class EventHubRuntimeInformation
- uid: com.microsoft.azure.eventhubs._exception_util
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._exception_util.yml
  name: ExceptionUtil
  nameWithType: ExceptionUtil
  fullName: com.microsoft.azure.eventhubs.ExceptionUtil
  type: Class
  syntax:
    content: public class ExceptionUtil
- uid: com.microsoft.azure.eventhubs._fault_tolerant_object
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
  name: FaultTolerantObject<T>
  nameWithType: FaultTolerantObject<T>
  fullName: com.microsoft.azure.eventhubs.FaultTolerantObject<T>
  type: Class
  syntax:
    content: public class FaultTolerantObject<T extends IIOObject>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs._i_event_hub_client
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._i_event_hub_client.yml
  name: IEventHubClient
  nameWithType: IEventHubClient
  fullName: com.microsoft.azure.eventhubs.IEventHubClient
  type: Interface
  syntax:
    content: public interface IEventHubClient
- uid: com.microsoft.azure.eventhubs._illegal_connection_string_format_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._illegal_connection_string_format_exception.yml
  name: IllegalConnectionStringFormatException
  nameWithType: IllegalConnectionStringFormatException
  fullName: com.microsoft.azure.eventhubs.IllegalConnectionStringFormatException
  type: Class
  summary: <p>This exception is thrown when the connection string provided does not meet the requirement for connection. </p>
  syntax:
    content: public class IllegalConnectionStringFormatException
- uid: com.microsoft.azure.eventhubs._illegal_entity_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._illegal_entity_exception.yml
  name: IllegalEntityException
  nameWithType: IllegalEntityException
  fullName: com.microsoft.azure.eventhubs.IllegalEntityException
  type: Class
  summary: >-
    <p>This exception is thrown for the following reasons: <itemizedlist><listitem><p>When the entity user attempted to connect does not exist </p></listitem><listitem><p>The entity user wants to connect is disabled </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class IllegalEntityException extends EventHubException
- uid: com.microsoft.azure.eventhubs._i_receiver_settings_provider
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._i_receiver_settings_provider.yml
  name: IReceiverSettingsProvider
  nameWithType: IReceiverSettingsProvider
  fullName: com.microsoft.azure.eventhubs.IReceiverSettingsProvider
  type: Interface
  syntax:
    content: public interface IReceiverSettingsProvider
- uid: com.microsoft.azure.eventhubs._iterator_util
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._iterator_util.yml
  name: IteratorUtil
  nameWithType: IteratorUtil
  fullName: com.microsoft.azure.eventhubs.IteratorUtil
  type: Class
  syntax:
    content: public class IteratorUtil
- uid: com.microsoft.azure.eventhubs._i_timeout_error_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._i_timeout_error_handler.yml
  name: ITimeoutErrorHandler
  nameWithType: ITimeoutErrorHandler
  fullName: com.microsoft.azure.eventhubs.ITimeoutErrorHandler
  type: Interface
  syntax:
    content: public interface ITimeoutErrorHandler
- uid: com.microsoft.azure.eventhubs._management_channel
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._management_channel.yml
  name: ManagementChannel
  nameWithType: ManagementChannel
  fullName: com.microsoft.azure.eventhubs.ManagementChannel
  type: Class
  syntax:
    content: public class ManagementChannel
- uid: com.microsoft.azure.eventhubs._message_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._message_receiver.yml
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: com.microsoft.azure.eventhubs.MessageReceiver
  type: Class
  summary: <p>Common Receiver that abstracts all amqp related details translates event-driven reactor model into async receive Api </p>
  syntax:
    content: public class MessageReceiver extends ClientEntity implements IAmqpReceiver
- uid: com.microsoft.azure.eventhubs._message_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._message_sender.yml
  name: MessageSender
  nameWithType: MessageSender
  fullName: com.microsoft.azure.eventhubs.MessageSender
  type: Class
  summary: <p>Abstracts all amqp related details translates event-driven reactor model into async send Api </p>
  syntax:
    content: public class MessageSender extends ClientEntity implements IAmqpSender
- uid: com.microsoft.azure.eventhubs._messaging_factory
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._messaging_factory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.eventhubs.MessagingFactory
  type: Class
  summary: <p>Abstracts all amqp related details and exposes AmqpConnection object Manages connection life-cycle </p>
  syntax:
    content: public class MessagingFactory extends ClientEntity implements IAmqpConnection,ISessionProvider
- uid: com.microsoft.azure.eventhubs._operation_cancelled_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._operation_cancelled_exception.yml
  name: OperationCancelledException
  nameWithType: OperationCancelledException
  fullName: com.microsoft.azure.eventhubs.OperationCancelledException
  type: Class
  summary: <p>This exception is thrown when the underlying Amqp layer encounter an abnormal link abort or disconnect of connection in an unexpected fashion. </p>
  syntax:
    content: public class OperationCancelledException extends EventHubException
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Class
  summary: >-
    <p>A handler class for the receive operation. Use any implementation of this abstract class to specify user action when using <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>'s setReceiveHandler().</p>

    <p></p>
  syntax:
    content: public class PartitionReceiveHandler
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (i.e., <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class PartitionReceiver extends ClientEntity implements IReceiverSettingsProvider
- uid: com.microsoft.azure.eventhubs._partition_sender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_sender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Class
  summary: >-
    <p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient#send</xref> method.</p>

    <p></p>
  syntax:
    content: public class PartitionSender extends ClientEntity
- uid: com.microsoft.azure.eventhubs._pass_by_ref
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._pass_by_ref.yml
  name: PassByRef<T>
  nameWithType: PassByRef<T>
  fullName: com.microsoft.azure.eventhubs.PassByRef<T>
  type: Class
  syntax:
    content: public class PassByRef<T extends Object>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._payload_size_exceeded_exception.yml
  name: PayloadSizeExceededException
  nameWithType: PayloadSizeExceededException
  fullName: com.microsoft.azure.eventhubs.PayloadSizeExceededException
  type: Class
  summary: >-
    <p>this exception is thrown when user attempts to send a event data or brokered message that has exceeded the allowed payload size as defined by the service. Note that in a batch send scenario the limit can include possible batch overhead.</p>

    <p></p>
  syntax:
    content: public class PayloadSizeExceededException extends EventHubException
- uid: com.microsoft.azure.eventhubs._quota_exceeded_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._quota_exceeded_exception.yml
  name: QuotaExceededException
  nameWithType: QuotaExceededException
  fullName: com.microsoft.azure.eventhubs.QuotaExceededException
  type: Class
  syntax:
    content: public class QuotaExceededException extends EventHubException
- uid: com.microsoft.azure.eventhubs._receive_pump
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receive_pump.yml
  name: ReceivePump
  nameWithType: ReceivePump
  fullName: com.microsoft.azure.eventhubs.ReceivePump
  type: Class
  syntax:
    content: public class ReceivePump
- uid: com.microsoft.azure.eventhubs._receiver_context
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_context.yml
  name: ReceiverContext
  nameWithType: ReceiverContext
  fullName: com.microsoft.azure.eventhubs.ReceiverContext
  type: Class
  syntax:
    content: public class ReceiverContext extends ErrorContext
- uid: com.microsoft.azure.eventhubs._receiver_disconnected_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_disconnected_exception.yml
  name: ReceiverDisconnectedException
  nameWithType: ReceiverDisconnectedException
  fullName: com.microsoft.azure.eventhubs.ReceiverDisconnectedException
  type: Class
  summary: >-
    <p>This exception is thrown when a EventHubReceiver is being disconnected because of one of the following reason: <itemizedlist><listitem><p>user attempts to connect a non-epoch receiver to a event hub partition, when there is an epoch receiver connected to the partition. </p></listitem><listitem><p>you are using an epoch receiver for a given partition but another epoch receiver with a higher epoch value connects to the same partition. </p></listitem></itemizedlist>

    User should make sure either all code are using non-epoch receivers, or ensure that there is only one epoch receiver processing a given partition at any given point in time.</p>

    <p></p>
  syntax:
    content: public class ReceiverDisconnectedException extends EventHubException
- uid: com.microsoft.azure.eventhubs._receiver_options
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_options.yml
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>
  syntax:
    content: public class ReceiverOptions
- uid: com.microsoft.azure.eventhubs._receiver_runtime_information
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  name: ReceiverRuntimeInformation
  nameWithType: ReceiverRuntimeInformation
  fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
  type: Class
  summary: <p>Represents the temporal receiver runtime information for a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. Current received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> and <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> can be used to find approximate value of pending events (which are not processed yet). </p>
  syntax:
    content: public class ReceiverRuntimeInformation
- uid: com.microsoft.azure.eventhubs._replayable_work_item
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._replayable_work_item.yml
  name: ReplayableWorkItem<T>
  nameWithType: ReplayableWorkItem<T>
  fullName: com.microsoft.azure.eventhubs.ReplayableWorkItem<T>
  type: Class
  syntax:
    content: public class ReplayableWorkItem<T> extends WorkItem<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs._retry_exponential
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._retry_exponential.yml
  name: RetryExponential
  nameWithType: RetryExponential
  fullName: com.microsoft.azure.eventhubs.RetryExponential
  type: Class
  summary: >-
    <p>

      <xref uid="com.microsoft.azure.eventhubs._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> implementation where the delay between retries will grow in an exponential manner. <xref uid="com.microsoft.azure.eventhubs._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> can be set on the client operations using <xref uid="com.microsoft.azure.eventhubs._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref>. RetryIntervals will be computed using a retryFactor which is a function of deltaBackOff (MaximumBackoff - MinimumBackoff) and MaximumRetryCount </p>
  syntax:
    content: public class RetryExponential extends RetryPolicy
- uid: com.microsoft.azure.eventhubs._retry_policy
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._retry_policy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.eventhubs.RetryPolicy
  type: Class
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.eventhubs._sender_context
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._sender_context.yml
  name: SenderContext
  nameWithType: SenderContext
  fullName: com.microsoft.azure.eventhubs.SenderContext
  type: Class
  syntax:
    content: public class SenderContext extends ErrorContext
- uid: com.microsoft.azure.eventhubs._server_busy_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._server_busy_exception.yml
  name: ServerBusyException
  nameWithType: ServerBusyException
  fullName: com.microsoft.azure.eventhubs.ServerBusyException
  type: Class
  summary: >-
    <p>Server busy exception is thrown when the current entity's activity has put excessive load onto the service. When encountered this exception user should wait at least 4 seconds before any retry/runtime operations for the said entity again.</p>

    <p></p>
  syntax:
    content: public class ServerBusyException extends EventHubException
- uid: com.microsoft.azure.eventhubs._shared_access_signature_token_provider
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._shared_access_signature_token_provider.yml
  name: SharedAccessSignatureTokenProvider
  nameWithType: SharedAccessSignatureTokenProvider
  fullName: com.microsoft.azure.eventhubs.SharedAccessSignatureTokenProvider
  type: Class
  syntax:
    content: public class SharedAccessSignatureTokenProvider
- uid: com.microsoft.azure.eventhubs._string_util
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._string_util.yml
  name: StringUtil
  nameWithType: StringUtil
  fullName: com.microsoft.azure.eventhubs.StringUtil
  type: Class
  syntax:
    content: public class StringUtil
- uid: com.microsoft.azure.eventhubs._timeout_exception
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._timeout_exception.yml
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: com.microsoft.azure.eventhubs.TimeoutException
  type: Class
  summary: >-
    <p>This exception is thrown when the operation has exceeded the predetermined time limit. User should check connectivity is healthy between client process and service.</p>

    <p></p>
  syntax:
    content: public class TimeoutException extends EventHubException
- uid: com.microsoft.azure.eventhubs._timeout_tracker
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._timeout_tracker.yml
  name: TimeoutTracker
  nameWithType: TimeoutTracker
  fullName: com.microsoft.azure.eventhubs.TimeoutTracker
  type: Class
  syntax:
    content: public class TimeoutTracker
- uid: com.microsoft.azure.eventhubs._timer
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._timer.yml
  name: Timer
  nameWithType: Timer
  fullName: com.microsoft.azure.eventhubs.Timer
  type: Class
  summary: <p>An abstraction for a Scheduler functionality - which can later be replaced by a light-weight Thread </p>
  syntax:
    content: public class Timer
- uid: com.microsoft.azure.eventhubs._timer_type
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._timer_type.yml
  name: TimerType
  nameWithType: TimerType
  fullName: com.microsoft.azure.eventhubs.TimerType
  type: Enum
  syntax:
    content: public enum TimerType
- uid: com.microsoft.azure.eventhubs._tracking_util
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._tracking_util.yml
  name: TrackingUtil
  nameWithType: TrackingUtil
  fullName: com.microsoft.azure.eventhubs.TrackingUtil
  type: Class
  syntax:
    content: public class TrackingUtil
- uid: com.microsoft.azure.eventhubs._work_item
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._work_item.yml
  name: WorkItem<T>
  nameWithType: WorkItem<T>
  fullName: com.microsoft.azure.eventhubs.WorkItem<T>
  type: Class
  syntax:
    content: public class WorkItem<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._receive_pump._i_partition_receiver.yml
  name: ReceivePump.IPartitionReceiver
  nameWithType: ReceivePump.IPartitionReceiver
  fullName: com.microsoft.azure.eventhubs.ReceivePump.IPartitionReceiver
  type: Interface
  syntax:
    content: public interface IPartitionReceiver
- uid: com.microsoft.azure.eventhubs._messaging_factory._reactor_factory
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._messaging_factory._reactor_factory.yml
  name: MessagingFactory.ReactorFactory
  nameWithType: MessagingFactory.ReactorFactory
  fullName: com.microsoft.azure.eventhubs.MessagingFactory.ReactorFactory
  type: Class
  syntax:
    content: public class ReactorFactory
- uid: com.microsoft.azure.eventhubs._event_data._system_properties
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data._system_properties.yml
  name: EventData.SystemProperties
  nameWithType: EventData.SystemProperties
  fullName: com.microsoft.azure.eventhubs.EventData.SystemProperties
  type: Class
  syntax:
    content: public class SystemProperties
- uid: com.microsoft.azure.eventhubs._messaging_factory._thread_factory
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._messaging_factory._thread_factory.yml
  name: MessagingFactory.ThreadFactory
  nameWithType: MessagingFactory.ThreadFactory
  fullName: com.microsoft.azure.eventhubs.MessagingFactory.ThreadFactory
  type: Class
  syntax:
    content: public class ThreadFactory
